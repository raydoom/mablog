1:另外导航栏还有一个首页导航按钮，也希望点击它就能回到首页面，修改的任务作为练习交给你了。
当然还有一些跳转可以完善，比如文章标题下有分类、发布时间、作者、评论量、阅读量等信息，可以设置点击分类跳转到分类页面；点击评论量就跳转到文章详情页的评论处等，这些细节部分不涉及新知识，就当做练习交给你自己完成了。

2:显示正确的评论量
有两处地方显示的评论量，显示评论量的方法很简单。回顾一下我们是如何获取某篇 post 的下的评论列表的？我们使用的是 post.comment_set.all()。all 方法返回该 post 关联的评论列表。此外模型管理器（comment_set 是一个特殊的模型管理器）还有一个 count 方法，返回的是数量，即 post 下有多少条评论，我们可以直接在模板中调用这个方法：{{ post.comment_set.count }}。将评论量替换成该模板变量就可以正确显示文章的评论数了。
3:类视图修改


4:将 Annotate 用于其它关联关系
此外，annotate 方法不局限于用于本文提到的统计分类下的文章数，你也可以举一反三，只要是两个 model 类通过 ForeignKey 或者 ManyToMany 关联起来，那么就可以使用 annotate 方法来统计数量。比如下面这样一个标签系统：
class Post(models.Model):
    title = models.CharField(max_length=70)
    body = models.TextField()
    Tags = models.ManyToManyField('Tag')

    def __str__(self):
        return self.title

class Tag(models.Model):
    name = models.CharField(max_length=100)
统计标签下的文章数：
from django.db.models.aggregates import Count
from blog.models import Tag

# Count 计算分类下的文章数，其接受的参数为需要计数的模型的名称
tag_list = Tag.objects.annotate(num_posts=Count('post'))
关于 annotate 方法官方文档的说明在这里：annotate。同时也建议了解了解 objects 下的其它操作数据库的方法，以便在遇到相关问题时知道去哪里查阅。

5:标签云




部署到服务器

1：安装git python3 python3-pip
2：关闭debug模式 setting.py文件
	DEBUG = False
	ALLOWED_HOSTS = ['127.0.0.1', 'localhost ', '.zmrenwu.com']
3：进入项目的根目录，运行 pip freeze > requirements.txt
	这时项目根目录下会生成了一个 requirements.txt 的文本文件，其内容记录了项目的全部依赖。
		antiorm==1.2.1
		Django==1.11.5
		Markdown==2.6.9
		Pygments==2.2.0
		pymongo==3.4.0
		PyMySQL==0.7.10
		pytz==2017.2
		six==1.10.0
		utils==0.9.0
	安装依赖
	pip install -r requirements.txt

	docker 
	yum -y install gcc gcc-c++ wget
	wget "https://www.python.org/ftp/python/3.5.0/Python-3.5.0.tgz"
	tar -zxvf Python-3.5.0.tgz
	1 sudo mkdir /usr/local/python3
	2 sudo Python-3.5.0/configure --prefix=/usr/local/python3
	3 sudo make
	4 sudo make install

	wget https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz#md5=35f01da33009719497f01a4ba69d63c9

	tar -zvxf pip-9.0.1.tar.gz
	cd pip-9.0.1
	/usr/local/python3/bin/python3 setup.py install
	/usr/local/python3/bin/pip

4：更新模型 迁移数据库
	python manage.py makemigrations
	python manage.py migrate